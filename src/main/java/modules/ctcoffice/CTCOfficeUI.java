/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modules.ctcoffice;

import java.awt.Color;
import java.beans.PropertyChangeSupport;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import java.io.*;
import shared.*;

/**
 *
 * @author Ben Posey
 */
public class CTCOfficeUI extends javax.swing.JFrame {

    private CTCOffice ctc;
    private static int timeMult = 1;
    private static int trainCount = 0;
    private final String[] redLineData;
    private boolean[] redOcc;
    private final String[] greenLineData;
    private boolean[] greenOcc;
    private final String[] scheduleColumnVector;
    private ArrayList<Object[][]> trainSchedules;
    public final PropertyChangeSupport pcs = new PropertyChangeSupport(this);
    private static int minutes = 0;
    private static int seconds = 0;
    private static int millis = 0;

    private final double KMH_TO_MPH = (double)1/(double)1.609344;
    private final double M_TO_F = 3.280840;

    private Thread thread;

    /**
     * Creates new form CTCOfficeUI
     */
    public CTCOfficeUI(CTCOffice ctc) {
        this.ctc = ctc;
        this.thread = thread;
        
        int redSize = ctc.redLineData.size();
        this.redLineData = new String[redSize];
        for (int i = 0; i < redSize; i++) {
            this.redLineData[i] = ctc.redLineData.get(i);
        }
        // this.redLineData = new String[] { "A1", "A2", "A3", "B4", "B5", "B6", 
        //     "C7|Shadyside", "C8", "C9|Switch", "D10", "D11", "D12", "E13",
        //     "E14", "E15|Switch" };
        this.greenLineData = new String[] { "A1", "A2|Pioneer", "A3", "B4",
            "B5", "B6", "C7", "C8", "C9|Edgebrook", "C10", "C11", "C12|Switch"};
        this.scheduleColumnVector = new String[] { "Destination", "Dwell", "Arrival" };
        this.trainSchedules = new ArrayList<>();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        ImportScheduleFileChooser = new javax.swing.JFileChooser();
        TimeThroughputPanel = new javax.swing.JPanel();
        TimeLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        TimeDownButton = new javax.swing.JButton();
        TimeUpButton = new javax.swing.JButton();
        TimePlayButton = new javax.swing.JButton();
        TimePauseButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        ThroughputLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ThroughputRedLabel = new javax.swing.JLabel();
        ThroughputGreenLabel = new javax.swing.JLabel();
        TrackStatusPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        TrackLineComboBox = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        TrackStatusLED = new javax.swing.JLabel();
        TrackOccupancyLED = new javax.swing.JLabel();
        TrackSwitchToggle = new javax.swing.JToggleButton();
        TrackMaintenanceToggle = new javax.swing.JToggleButton();
        TrackBlockComboBox = new javax.swing.JComboBox<>();
        ActiveTrainPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        ActiveRedTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        ActiveGreenTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ActiveScheduleTable = new javax.swing.JTable();
        ActiveSelectedTrainLabel = new javax.swing.JLabel();
        TrainPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        DispatchAutomaticButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        DispatchLineComboBox = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        DispatchDepartureTextField = new javax.swing.JTextField();
        DispatchManualButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        DispatchDestComboBox = new javax.swing.JComboBox<>();
        DispatchDwellTextField = new javax.swing.JTextField();
        DispatchArrivalTextField = new javax.swing.JTextField();
        DispatchAddScheduleButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DispatchScheduleTable = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();

        File workingDirectory = new File(System.getProperty("user.dir"));
        ImportScheduleFileChooser.setCurrentDirectory(workingDirectory);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CTC Office");
        setMaximumSize(new java.awt.Dimension(1200, 600));
        setResizable(false);

        TimeThroughputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time & Throughput", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 30))); // NOI18N
        TimeThroughputPanel.setPreferredSize(new java.awt.Dimension(286, 319));

        TimeLabel.setFont(new java.awt.Font("Courier New", 1, 28)); // NOI18N
        TimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeLabel.setText("00:00:00");
        TimeLabel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TimeLabelPropertyChange(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("1X");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        TimeDownButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TimeDownButton.setText("<<");
        buttonGroup1.add(TimeDownButton);
        TimeDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeDownButtonActionPerformed(evt);
            }
        });

        TimeUpButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TimeUpButton.setText(">>");
        buttonGroup1.add(TimeUpButton);
        TimeUpButton.setName(""); // NOI18N
        TimeUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeUpButtonActionPerformed(evt);
            }
        });

        TimePlayButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        TimePlayButton.setText("Play");
        TimePlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimePlayButtonActionPerformed(evt);
            }
        });

        TimePauseButton.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        TimePauseButton.setText("Pause");
        TimePauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimePauseButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Throughput:");

        ThroughputLabel.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        ThroughputLabel.setForeground(new java.awt.Color(0, 0, 204));
        ThroughputLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ThroughputLabel.setText("0");

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Red:");

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Green:");

        ThroughputRedLabel.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        ThroughputRedLabel.setForeground(new java.awt.Color(204, 0, 0));
        ThroughputRedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ThroughputRedLabel.setText("0");

        ThroughputGreenLabel.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        ThroughputGreenLabel.setForeground(new java.awt.Color(0, 204, 0));
        ThroughputGreenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ThroughputGreenLabel.setText("0");

        javax.swing.GroupLayout TimeThroughputPanelLayout = new javax.swing.GroupLayout(TimeThroughputPanel);
        TimeThroughputPanel.setLayout(TimeThroughputPanelLayout);
        TimeThroughputPanelLayout.setHorizontalGroup(
            TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimeThroughputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(TimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(TimeThroughputPanelLayout.createSequentialGroup()
                        .addComponent(TimeDownButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TimeUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TimeThroughputPanelLayout.createSequentialGroup()
                        .addComponent(TimePlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TimePauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ThroughputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(TimeThroughputPanelLayout.createSequentialGroup()
                        .addGroup(TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ThroughputRedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ThroughputGreenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        TimeThroughputPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {TimePauseButton, TimePlayButton});

        TimeThroughputPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ThroughputGreenLabel, ThroughputRedLabel});

        TimeThroughputPanelLayout.setVerticalGroup(
            TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimeThroughputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TimeDownButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TimeUpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TimePlayButton)
                    .addComponent(TimePauseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ThroughputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TimeThroughputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ThroughputRedLabel)
                    .addComponent(ThroughputGreenLabel))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        TrackStatusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Track Status", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 30))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Line");

        TrackLineComboBox.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        TrackLineComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Red", "Green" }));
        TrackLineComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrackLineComboBoxActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Block");

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Status");

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Occupancy");

        TrackStatusLED.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        TrackStatusLED.setForeground(new java.awt.Color(102, 102, 102));
        TrackStatusLED.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TrackStatusLED.setText("*");

        TrackOccupancyLED.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        TrackOccupancyLED.setForeground(new java.awt.Color(102, 102, 102));
        TrackOccupancyLED.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TrackOccupancyLED.setText("*");

        TrackSwitchToggle.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        TrackSwitchToggle.setText("Toggle Switch");
        TrackSwitchToggle.setEnabled(false);

        TrackMaintenanceToggle.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        TrackMaintenanceToggle.setText("Close for Maintenance");
        TrackMaintenanceToggle.setEnabled(false);
        TrackMaintenanceToggle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TrackMaintenanceToggleStateChanged(evt);
            }
        });
        TrackMaintenanceToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrackMaintenanceToggleActionPerformed(evt);
            }
        });

        TrackBlockComboBox.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        TrackBlockComboBox.setEnabled(false);
        TrackBlockComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrackBlockComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TrackStatusPanelLayout = new javax.swing.GroupLayout(TrackStatusPanel);
        TrackStatusPanel.setLayout(TrackStatusPanelLayout);
        TrackStatusPanelLayout.setHorizontalGroup(
            TrackStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TrackStatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TrackStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TrackSwitchToggle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TrackMaintenanceToggle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TrackBlockComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TrackStatusPanelLayout.createSequentialGroup()
                        .addGroup(TrackStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TrackStatusLED, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(TrackStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TrackOccupancyLED, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TrackLineComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        TrackStatusPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {TrackOccupancyLED, TrackStatusLED, jLabel12, jLabel13});

        TrackStatusPanelLayout.setVerticalGroup(
            TrackStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrackStatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TrackLineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TrackBlockComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TrackStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TrackStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TrackStatusLED)
                    .addComponent(TrackOccupancyLED))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TrackMaintenanceToggle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TrackSwitchToggle)
                .addContainerGap())
        );

        ActiveTrainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Active Trains", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 30))); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N

        ActiveRedTable.setBackground(new java.awt.Color(255, 204, 204));
        ActiveRedTable.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ActiveRedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Train ID", "Start Block", "Suggested Speed", "Initial Authority", "Passengers"
            }
        ));
        ActiveRedTable.getTableHeader().setFont(new java.awt.Font("Courier New", 1, 18));
        ActiveRedTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActiveRedTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ActiveRedTable);

        jTabbedPane1.addTab("Red", jScrollPane1);

        ActiveGreenTable.setBackground(new java.awt.Color(204, 255, 204));
        ActiveGreenTable.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ActiveGreenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Train ID", "Start Block", "Suggested Speed", "Initial Authority", "Passengers"
            }
        ));
        ActiveGreenTable.getTableHeader().setFont(new java.awt.Font("Courier New", 1, 18));
        ActiveGreenTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActiveGreenTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ActiveGreenTable);

        jTabbedPane1.addTab("Green", jScrollPane3);

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Selected Schedule");

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Train ID:");

        ActiveScheduleTable.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        ActiveScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Destination", "Dwell", "Arrival"
            }
        ));
        ActiveScheduleTable.getTableHeader().setFont(new java.awt.Font("Courier New", 1, 18));
        jScrollPane4.setViewportView(ActiveScheduleTable);

        ActiveSelectedTrainLabel.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        ActiveSelectedTrainLabel.setText("...");

        javax.swing.GroupLayout ActiveTrainPanelLayout = new javax.swing.GroupLayout(ActiveTrainPanel);
        ActiveTrainPanel.setLayout(ActiveTrainPanelLayout);
        ActiveTrainPanelLayout.setHorizontalGroup(
            ActiveTrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4)
            .addGroup(ActiveTrainPanelLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ActiveSelectedTrainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        ActiveTrainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ActiveSelectedTrainLabel, jLabel4});

        ActiveTrainPanelLayout.setVerticalGroup(
            ActiveTrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActiveTrainPanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ActiveTrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ActiveSelectedTrainLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        TrainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dispatch Train", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 0, 30))); // NOI18N
        TrainPanel.setPreferredSize(new java.awt.Dimension(433, 0));

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Automatic");

        DispatchAutomaticButton.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        DispatchAutomaticButton.setText("Import Schedule");
        DispatchAutomaticButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchAutomaticButtonActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Manual");

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Line");

        DispatchLineComboBox.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        DispatchLineComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Red", "Green" }));
        DispatchLineComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchLineComboBoxActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Departure Time");

        DispatchDepartureTextField.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        DispatchDepartureTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DispatchDepartureTextField.setText("00:00:00");
        DispatchDepartureTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchDepartureTextFieldActionPerformed(evt);
            }
        });

        DispatchManualButton.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        DispatchManualButton.setText("Dispatch Train");
        DispatchManualButton.setEnabled(false);
        DispatchManualButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchManualButtonActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Destination");

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Dwell");

        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Arrival");

        DispatchDestComboBox.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        DispatchDestComboBox.setAutoscrolls(true);
        DispatchDestComboBox.setEnabled(false);
        DispatchDestComboBox.setMaximumSize(new java.awt.Dimension(39, 20));
        DispatchDestComboBox.setName("Dest"); // NOI18N

        DispatchDwellTextField.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        DispatchDwellTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DispatchDwellTextField.setText("00:01:00");
        DispatchDwellTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchDwellTextFieldActionPerformed(evt);
            }
        });

        DispatchArrivalTextField.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        DispatchArrivalTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DispatchArrivalTextField.setText("00:00:00");
        DispatchArrivalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchArrivalTextFieldActionPerformed(evt);
            }
        });

        DispatchAddScheduleButton.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        DispatchAddScheduleButton.setText("Add to Schedule");
        DispatchAddScheduleButton.setEnabled(false);
        DispatchAddScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchAddScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DispatchDestComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DispatchAddScheduleButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(DispatchDwellTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DispatchArrivalTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DispatchArrivalTextField, DispatchDwellTextField});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DispatchDestComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DispatchDwellTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DispatchArrivalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DispatchAddScheduleButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DispatchScheduleTable.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        DispatchScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Destination", "Dwell", "Arrival"
            }
        ));
        DispatchScheduleTable.getTableHeader().setFont(new java.awt.Font("Courier New", 1, 18));
        jScrollPane2.setViewportView(DispatchScheduleTable);

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Schedule");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout TrainPanelLayout = new javax.swing.GroupLayout(TrainPanel);
        TrainPanel.setLayout(TrainPanelLayout);
        TrainPanelLayout.setHorizontalGroup(
            TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrainPanelLayout.createSequentialGroup()
                .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TrainPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DispatchLineComboBox, 0, 140, Short.MAX_VALUE))
                        .addGap(151, 151, 151)
                        .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DispatchDepartureTextField)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                        .addGap(10, 10, 10))
                    .addGroup(TrainPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DispatchAutomaticButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DispatchManualButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(TrainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(13, 13, 13))
        );
        TrainPanelLayout.setVerticalGroup(
            TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DispatchAutomaticButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DispatchLineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DispatchDepartureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DispatchManualButton)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TimeThroughputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                    .addComponent(TrackStatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TrainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(ActiveTrainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ActiveTrainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TrainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 680, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(TimeThroughputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TrackStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }                  



    /*************************
     *** TIME & THROUGHPUT ***
     *************************/

    public void increaseTime() {
        millis += timeMult;
        if (millis >= 99) {
            millis = 0;
            seconds += 1;
        }
        if (seconds >= 60) {
            seconds = 0;
            minutes += 1;
        }
        String minutesString = String.format("%02d", minutes);
        String secondsString = String.format("%02d", seconds);
        String millisString = String.format("%02d", millis);
        TimeLabel.setText(minutesString+":"+secondsString+":"+millisString);
    }

    private void TimePauseButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        // try {
            
        //     thread.wait();
        // } catch (Exception e) {
        //     e.printStackTrace();
        //     System.out.println("Resume...");
        // }

        //ctc.setThreadStatus(true);
        
    }                                               

    // >> Button
    private void TimeUpButtonActionPerformed(java.awt.event.ActionEvent evt) {
        timeMult = 10;
        jLabel2.setText(timeMult + "X");
        ctc.setTime(1);
        TimeDownButton.setEnabled(true);
        TimeUpButton.setEnabled(false);
    }                                            

    // << Button
    private void TimeDownButtonActionPerformed(java.awt.event.ActionEvent evt) {
        timeMult = 1;
        jLabel2.setText(timeMult + "X");
        ctc.setTime(10);
        TimeDownButton.setEnabled(false);
        TimeUpButton.setEnabled(true);
    }                                              

    private void TimeLabelPropertyChange(java.beans.PropertyChangeEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void TimePlayButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        //thread.notify();
        // ctc.setThreadStatus(false);
        // thread.notify();
    }           



    /********************
     *** TRACK STATUS ***
     ********************/                           

    public void updateOccupancy() {
        redOcc = ctc.getRedOcc();
        greenOcc = ctc.getGreenOcc();

        updateStatus();
    }

    private void updateStatus() {
        int trackLineIndex = TrackLineComboBox.getSelectedIndex();
        int trackBlockIndex = TrackBlockComboBox.getSelectedIndex();
        if (trackBlockIndex > 0) {
            String trackBlock = TrackBlockComboBox.getSelectedItem().toString();
            
            // Check if switch
            if (trackBlock.toLowerCase().contains("switch")) {
                TrackSwitchToggle.setEnabled(true);
            } else {
                TrackSwitchToggle.setEnabled(false);
            }

            TrackMaintenanceToggle.setEnabled(true);
            if (TrackMaintenanceToggle.isSelected()) {
                TrackStatusLED.setForeground(new Color(255,0,0));
                TrackSwitchToggle.setEnabled(false);
            } else {
                TrackStatusLED.setForeground(new Color(0,204,0));
            }
            
            if (trackLineIndex == 1) {  // Check if selected red block is occupied
                if (redOcc[trackBlockIndex+1]) {   // If occupied = true
                    TrackOccupancyLED.setForeground(new Color(0,204,0));
                } else {
                    TrackOccupancyLED.setForeground(new Color(102,102,102));
                }

            } else if (trackLineIndex == 2) {   // Check if starting green block is occupied (J62)
                if (ActiveGreenTable.getRowCount() > 0) {
                    TrackOccupancyLED.setForeground(new Color(0,204,0));
                }
            } else {
                TrackOccupancyLED.setForeground(new Color(102,102,102));
            }
        } /*else {
            TrackMaintenanceToggle.setEnabled(false);
            TrackSwitchToggle.setEnabled(false);
            TrackStatusLED.setForeground(new Color(102,102,102));
            TrackOccupancyLED.setForeground(new Color(102,102,102));
        }*/
        
    }

    private void TrackMaintenanceToggleActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void TrackMaintenanceToggleStateChanged(javax.swing.event.ChangeEvent evt) {                                                    
        if (TrackMaintenanceToggle.isSelected()) {
            TrackStatusLED.setForeground(new Color(255,0,0));
            TrackSwitchToggle.setEnabled(false);
        } else {
            TrackStatusLED.setForeground(new Color(0,204,0));
            String trackBlock = TrackBlockComboBox.getSelectedItem().toString();
            if (trackBlock.toLowerCase().contains("switch")) {
                TrackSwitchToggle.setEnabled(true);
            } else {
                TrackSwitchToggle.setEnabled(false);
            }
        }
                
    }                                                   

    private void TrackLineComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        int trackLine = TrackLineComboBox.getSelectedIndex();
        switch (trackLine) {
            case 1:
                // Red Line Selected
                TrackBlockComboBox.setEnabled(true);
                TrackBlockComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(redLineData));
                break;
            case 2:
                // Green Line Selected
                TrackBlockComboBox.setEnabled(true);
                TrackBlockComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(greenLineData));
                break;
            default:
                // No Line Selected
                TrackMaintenanceToggle.setEnabled(false);
                TrackSwitchToggle.setEnabled(false);
                TrackBlockComboBox.setEnabled(false);
                TrackBlockComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
                TrackStatusLED.setForeground(new Color(102,102,102));
                TrackOccupancyLED.setForeground(new Color(102,102,102));
                break;
        }
    }                                                 

    private void TrackBlockComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        TrackMaintenanceToggle.setSelected(false);
        TrackSwitchToggle.setSelected(false);

        updateStatus();
    } 



    /**********************
     *** DISPATCH TRAIN ***
     **********************/

    private void DispatchDepartureTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                           
        // TODO add your handling code here:
    }                                                          

    private void DispatchLineComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        
        int dispatchLine = DispatchLineComboBox.getSelectedIndex();
        switch (dispatchLine) {
            case 1:
                // Red Line Selected
                DispatchAddScheduleButton.setEnabled(true);
                DispatchDestComboBox.setEnabled(true);
                DispatchDestComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(redLineData));
                break;
            case 2:
                // Green Line Selected
                DispatchAddScheduleButton.setEnabled(true);
                DispatchDestComboBox.setEnabled(true);
                DispatchDestComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(greenLineData));
                break;
            default:
                // No Line Selected
                DispatchAddScheduleButton.setEnabled(false);
                DispatchDestComboBox.setEnabled(false);
                DispatchDestComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
                break;
        }
    }                                                    

    // Import Schedule
    private void DispatchAutomaticButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        int returnVal = ImportScheduleFileChooser.showOpenDialog(CTCOfficeUI.this);
        
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            File csvFile = ImportScheduleFileChooser.getSelectedFile();
            
            String line;
            String delim = ",";
            DefaultTableModel model = (DefaultTableModel) DispatchScheduleTable.getModel();
            // Load CSV into schedule table
            try {

                BufferedReader br = new BufferedReader(new FileReader(csvFile));
                while ((line = br.readLine()) != null) {

                    // use comma as separator
                    String[] row = line.split(delim);

                    model.addRow(row);

                }

            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
            
            DispatchManualButton.setEnabled(true);
        } else {
            System.out.println("No file selected");
        }
        
        
    }                                                       

    private void DispatchDwellTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void DispatchArrivalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                         
        // TODO add your handling code here:
    }                                                        

    // Add to Schedule
    private void DispatchAddScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        String dest = DispatchDestComboBox.getSelectedItem().toString();
        String dwell = DispatchDwellTextField.getText();
        String arrival = DispatchArrivalTextField.getText();
        
        DispatchLineComboBox.setEnabled(false);
        DispatchManualButton.setEnabled(true);
        
        DefaultTableModel model = (DefaultTableModel) DispatchScheduleTable.getModel();
        model.addRow(new Object[]{dest, dwell, arrival});
    }                                                         

    // Dispatch Trains
    private void DispatchManualButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        DispatchLineComboBox.setEnabled(true);
        int line = DispatchLineComboBox.getSelectedIndex();
        
        
        
        DefaultTableModel scheduleModel = (DefaultTableModel) DispatchScheduleTable.getModel();
        DefaultTableModel activeModel;
        
        
        // Get number of rows (stops) in schedule
        int stops = scheduleModel.getRowCount();
        System.out.println("Stops" + stops);
        
        Object[][] temp = new Object[stops][3];
        for (int i = 0; i < stops; i++) {
            temp[i][0] = DispatchScheduleTable.getValueAt(i, 0).toString();
            temp[i][1] = DispatchScheduleTable.getValueAt(i, 1).toString();
            temp[i][2] = DispatchScheduleTable.getValueAt(i, 2).toString();
        }
        
        // Store schedule data in trainSchedules
        trainSchedules.add(trainCount, temp);
        
        String firstStop = DispatchScheduleTable.getValueAt(0, 0).toString();
        int destBlock = 74;
        System.out.println(firstStop);
        if (firstStop.length() > 4) {
            String str[] = firstStop.split("\\|");
            System.out.println(str[0]);
            System.out.println(str[1]);
            destBlock = Integer.parseInt(str[0].substring(1));
        } else {
            destBlock = Integer.parseInt(firstStop.substring(1));
        }
        
        // Get vertex corresponding to block
        int destination = ctc.getStop(line,destBlock+1).w();

        System.out.println("Dest:"+destination);
        
        // Calculate Authority (miles) for first stop here     
        
        // Display train in Active Trains table
        // TrainID | Start Block | Speed | Authority | Passengers
        switch (line) {
            case 1:
                // Dispatch to Red Line
                ctc.dispatchTrain(74,destination);
                activeModel = (DefaultTableModel) ActiveRedTable.getModel();
                activeModel.addRow(new Object[]{trainCount, "C9", ctc.getSpeed()*KMH_TO_MPH, ctc.getAuthority()*M_TO_F, 30});
                scheduleModel.setNumRows(0);
                break;
            case 2:
                // Dispatch to Green Line
                activeModel = (DefaultTableModel) ActiveGreenTable.getModel();
                activeModel.addRow(new Object[]{trainCount, "J62", 37.28, 10, 0});
                scheduleModel.setNumRows(0);
                break;
            default:
                System.out.println("No Line Selected!");
                scheduleModel.setNumRows(0);
        }
        
        trainCount++;
        DispatchManualButton.setEnabled(false);
    }                    



    /*********************
     *** ACTIVE TRAINS ***
     *********************/                                

    private void ActiveRedTableMouseClicked(java.awt.event.MouseEvent evt) {                                            
        int row = ActiveRedTable.getSelectedRow();
        
        if (row > -1) {
            String trainID = ActiveRedTable.getModel().getValueAt(row, 0).toString();
            Object[][] temp = trainSchedules.get(Integer.parseInt(trainID));
            DefaultTableModel model = (DefaultTableModel) ActiveScheduleTable.getModel();
            model.setDataVector(temp, scheduleColumnVector);
            ActiveSelectedTrainLabel.setText(trainID);
        } else {
            System.out.println("No row selected");
        }
    }                                           

    private void ActiveGreenTableMouseClicked(java.awt.event.MouseEvent evt) {                                              
        int row = ActiveGreenTable.getSelectedRow();
        
        if (row > -1) {
            String trainID = ActiveGreenTable.getModel().getValueAt(row, 0).toString();
            Object[][] temp = trainSchedules.get(Integer.parseInt(trainID));
            DefaultTableModel model = (DefaultTableModel) ActiveScheduleTable.getModel();
            model.setDataVector(temp, scheduleColumnVector);
            ActiveSelectedTrainLabel.setText(trainID);
        } else {
            System.out.println("No row selected");
        }
    }                                             

                                                     

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Windows look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CTCOfficeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CTCOfficeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CTCOfficeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CTCOfficeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CTCOfficeUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify                     
    private javax.swing.JTable ActiveGreenTable;
    private javax.swing.JTable ActiveRedTable;
    private javax.swing.JTable ActiveScheduleTable;
    private javax.swing.JLabel ActiveSelectedTrainLabel;
    private javax.swing.JPanel ActiveTrainPanel;
    private javax.swing.JButton DispatchAddScheduleButton;
    private javax.swing.JTextField DispatchArrivalTextField;
    private javax.swing.JButton DispatchAutomaticButton;
    private javax.swing.JTextField DispatchDepartureTextField;
    private javax.swing.JComboBox<String> DispatchDestComboBox;
    private javax.swing.JTextField DispatchDwellTextField;
    private javax.swing.JComboBox<String> DispatchLineComboBox;
    private javax.swing.JButton DispatchManualButton;
    private javax.swing.JTable DispatchScheduleTable;
    private javax.swing.JPanel DispatchTrainPanel;
    private javax.swing.JFileChooser ImportScheduleFileChooser;
    private javax.swing.JLabel ThroughputGreenLabel;
    private javax.swing.JLabel ThroughputLabel;
    private javax.swing.JLabel ThroughputRedLabel;
    private javax.swing.JButton TimeDownButton;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JButton TimePauseButton;
    private javax.swing.JButton TimePlayButton;
    private javax.swing.JPanel TimeThroughputPanel;
    private javax.swing.JButton TimeUpButton;
    private javax.swing.JComboBox<String> TrackBlockComboBox;
    private javax.swing.JComboBox<String> TrackLineComboBox;
    private javax.swing.JToggleButton TrackMaintenanceToggle;
    private javax.swing.JLabel TrackOccupancyLED;
    private javax.swing.JLabel TrackStatusLED;
    private javax.swing.JPanel TrackStatusPanel;
    private javax.swing.JToggleButton TrackSwitchToggle;
    private javax.swing.JPanel TrainPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration                   
}
